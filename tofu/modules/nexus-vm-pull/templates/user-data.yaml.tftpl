#cloud-config
# Cloud-init bootstrap for self-configuring VM
# This runs ONCE on first boot

hostname: ${hostname}
fqdn: ${hostname}.local
manage_etc_hosts: true

# Upgrade packages on first boot (security critical)
package_upgrade: true
package_reboot_if_required: false

# Additional packages (if not in golden image)
packages:
- qemu-guest-agent
- ansible-core
- git

# Write configuration files
write_files:
# Ansible configuration for pull mode
- path: /etc/ansible/pull.conf
permissions: '0644'
content: |
[defaults]
host_key_checking = False
retry_files_enabled = False

# First-boot flag check script
- path: /usr/local/bin/first-boot-configure.sh
permissions: '0755'
content: |
#!/bin/bash
set -euo pipefail

FIRST_BOOT_FLAG="/var/run/first-boot-configured"
WEBHOOK_URL="${webhook_url}"

# Check if already configured
if [ -f "$FIRST_BOOT_FLAG" ]; then
echo "Already configured, skipping..."
exit 0
fi

echo "Starting first-boot configuration..."

# For private repos: setup git credentials
%{ if git_token_secret != "" ~}
echo "https://x-access-token:${git_token_secret}@github.com" > ~/.git-credentials
git config --global credential.helper store
%{ endif ~}

# Run ansible-pull
ansible-pull \
-U "${ansible_repo_url}" \
-i localhost, \
-e "webhook_url=$WEBHOOK_URL" \
${ansible_playbook}

RESULT=$?

# Clean up credentials
%{ if git_token_secret != "" ~}
rm -f ~/.git-credentials
%{ endif ~}

# Mark as configured
if [ $RESULT -eq 0 ]; then
touch "$FIRST_BOOT_FLAG"
echo "Configuration successful!"
else
echo "Configuration failed with exit code $RESULT"
exit $RESULT
fi

# Run commands on first boot
runcmd:
- systemctl enable qemu-guest-agent
- systemctl start qemu-guest-agent
- /usr/local/bin/first-boot-configure.sh

# Optional: Setup periodic re-convergence (idempotent)
# Uncomment to enable drift correction every 6 hours
# - |
# cat > /etc/systemd/system/ansible-pull.service << 'EOF'
# [Unit]
# Description=Ansible Pull Configuration
# After=network-online.target
# Wants=network-online.target
#
# [Service]
# Type=oneshot
# ExecStart=/usr/bin/ansible-pull -U ${ansible_repo_url} ${ansible_playbook}
# EOF
# - |
# cat > /etc/systemd/system/ansible-pull.timer << 'EOF'
# [Unit]
# Description=Run ansible-pull every 6 hours
#
# [Timer]
# OnBootSec=30min
# OnUnitActiveSec=6h
#
# [Install]
# WantedBy=timers.target
# EOF
# - systemctl daemon-reload
# - systemctl enable ansible-pull.timer
# - systemctl start ansible-pull.timer

final_message: "Cloud-init bootstrap complete. Self-configuration in progress..."
